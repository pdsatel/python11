import tkinter as tk
import random

class Formulario:
    def __init__(self, master, manager):
        self.master = master
        self.manager = manager
        self.master.title("Formulário de Registro")

        self.nome_label = tk.Label(self.master, text="Nome:")
        self.nome_label.grid(row=0, column=0)
        self.nome_entry = tk.Entry(self.master)
        self.nome_entry.grid(row=0, column=1)
        self.nome_entry.bind('<Return>', lambda event: self.focus_email_entry())

        self.email_label = tk.Label(self.master, text="Email:")
        self.email_label.grid(row=1, column=0)
        self.email_entry = tk.Entry(self.master)
        self.email_entry.grid(row=1, column=1)
        self.email_entry.bind('<Return>', lambda event: self.focus_telefone_entry())

        self.telefone_label = tk.Label(self.master, text="Telefone:")
        self.telefone_label.grid(row=2, column=0)
        self.telefone_entry = tk.Entry(self.master)
        self.telefone_entry.grid(row=2, column=1)
        self.telefone_entry.bind('<Return>', lambda event: self.focus_curso_entry())

        self.curso_label = tk.Label(self.master, text="Curso:")
        self.curso_label.grid(row=3, column=0)
        self.curso_entry = tk.Entry(self.master)
        self.curso_entry.grid(row=3, column=1)
        self.curso_entry.bind('<Return>', lambda event: self.registrar())

        self.registrar_button = tk.Button(self.master, text="Registrar", command=self.registrar)
        self.registrar_button.grid(row=4, column=0, columnspan=2)

        self.visualizar_button = tk.Button(self.master, text="Visualizar Registros", command=self.visualizar_registros)
        self.visualizar_button.grid(row=5, column=0, columnspan=2)

        self.registros_texto = tk.Text(self.master, height=10, width=50)
        self.registros_texto.grid(row=6, column=0, columnspan=2)

    def focus_email_entry(self):
        self.email_entry.focus()

    def focus_telefone_entry(self):
        self.telefone_entry.focus()

    def focus_curso_entry(self):
        self.curso_entry.focus()

    def registrar(self):
        nome = self.nome_entry.get()
        email = self.email_entry.get()
        telefone = self.telefone_entry.get()
        curso = self.curso_entry.get()
        codigo_voucher = random.randint(100000, 999999)
        self.manager.adicionar_registro(nome, email, telefone, curso, codigo_voucher)
        self.registros_texto.insert(tk.END, f"Nome: {nome}, Email: {email}, Telefone: {telefone}, Curso: {curso}, Código Voucher: {codigo_voucher}\n")
        self.nome_entry.delete(0, tk.END)
        self.email_entry.delete(0, tk.END)
        self.telefone_entry.delete(0, tk.END)
        self.curso_entry.delete(0, tk.END)

    def visualizar_registros(self):
        self.registros_texto.delete(1.0, tk.END)
        registros = self.manager.obter_todos_registros()
        if not registros:
            self.registros_texto.insert(tk.END, "Nenhum registro encontrado.")
        else:
            for registro in registros:
                self.registros_texto.insert(tk.END, f"Nome: {registro['nome']}, Email: {registro['email']}, Telefone: {registro['telefone']}, Curso: {registro['curso']}, Código Voucher: {registro['codigo_voucher']}\n")

class GerenciadorRegistro:
    def __init__(self):
        self.registros = []

    def adicionar_registro(self, nome, email, telefone, curso, codigo_voucher):
        self.registros.append({
            'nome': nome,
            'email': email,
            'telefone': telefone,
            'curso': curso,
            'codigo_voucher': codigo_voucher
        })

    def obter_todos_registros(self):
        return self.registros

root = tk.Tk()
gerenciador_registro = GerenciadorRegistro()
formulario = Formulario(root, gerenciador_registro)
root.mainloop()
